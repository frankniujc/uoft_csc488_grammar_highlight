%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Test file for syntax hilighting 488-lang %
%                                          %
%   its the bees knees                     %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
{
    % testing statements
    var a : Integer
    var b : Integer
    if a < 3 
        then a = 3
    
    if(a > 3)
        then a = a - 3 
        else a = a + 3

    while a > 3 do {
        exit
    }

    repeat a = a + 1
        until x > 3

    string := "testtring"
    condition := true

    if a > b then b = b + 1
    if a < b then b = b + 1 else 3

    while ( a < b ) 
        do condition = false

    repeat a = a + 1 
        until a >= 100
        
    exit
    exit 0
    exit -123
    exit when a > b
    exit when a < b
    exit when a <= b
    exit when a not = b
    exit when a < b and a >= b
    exit when a < b or a = b

    exit 3 when a < 3

    write "print this to the console"

    newline
    true
    false

    function somefunc ( ) : boolean {
        write "do somefunc"
        newline
        return true
    }

    var tern_test : text
    tern_test := (a == 3 
        ? "yes" 
        : "no")

    var somefunc_ret : boolean
    somefunc_ret = somefunc ( ), % call some func

    procedure someproc (
            a : integer , 
            b : integer ) {
        write "procedure"
        newline
        return
    }

    someproc ( 1 , 2 ), % call someproc

    % defining arrays with some offsets as well
    var 1d_array [ 3 ]
    var 2d_array [ 3 , 4]
    var 2d_offset_array [ 2 .. 6 , 2 .. 4]

    some_array [ 3 , 4 ] = 3

    %this is a comment
    write "and this", % is a comment on the same line

}
